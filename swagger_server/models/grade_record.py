# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GradeRecord(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, subject_name: str=None, grade_record: float=None):  # noqa: E501
        """GradeRecord - a model defined in Swagger

        :param subject_name: The subject_name of this GradeRecord.  # noqa: E501
        :type subject_name: str
        :param grade_record: The grade_record of this GradeRecord.  # noqa: E501
        :type grade_record: float
        """
        self.swagger_types = {
            'subject_name': str,
            'grade_record': float
        }

        self.attribute_map = {
            'subject_name': 'subject_name',
            'grade_record': 'gradeRecord'
        }
        self._subject_name = subject_name
        self._grade_record = grade_record

    @classmethod
    def from_dict(cls, dikt) -> 'GradeRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GradeRecord of this GradeRecord.  # noqa: E501
        :rtype: GradeRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject_name(self) -> str:
        """Gets the subject_name of this GradeRecord.


        :return: The subject_name of this GradeRecord.
        :rtype: str
        """
        return self._subject_name

    @subject_name.setter
    def subject_name(self, subject_name: str):
        """Sets the subject_name of this GradeRecord.


        :param subject_name: The subject_name of this GradeRecord.
        :type subject_name: str
        """
        if subject_name is None:
            raise ValueError("Invalid value for `subject_name`, must not be `None`")  # noqa: E501

        self._subject_name = subject_name

    @property
    def grade_record(self) -> float:
        """Gets the grade_record of this GradeRecord.


        :return: The grade_record of this GradeRecord.
        :rtype: float
        """
        return self._grade_record

    @grade_record.setter
    def grade_record(self, grade_record: float):
        """Sets the grade_record of this GradeRecord.


        :param grade_record: The grade_record of this GradeRecord.
        :type grade_record: float
        """

        self._grade_record = grade_record
